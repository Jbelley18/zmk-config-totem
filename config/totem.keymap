#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <190>;
    require-prior-idle-ms = <200>;
    flavor = "tap-preferred";
};

&sl { ignore-modifiers; };

/ {
    combos {
        compatible = "zmk,combos";

        SZ {
            bindings = <&kp RA(S)>;
            key-positions = <1 2>;
            timeout-ms = <25>;
            layers = <0>;
        };

        UE {
            bindings = <&kp RA(Y)>;
            key-positions = <7 8>;
            timeout-ms = <25>;
            layers = <0>;
        };

        AE {
            bindings = <&kp RA(Q)>;
            key-positions = <17 18>;
            timeout-ms = <25>;
            layers = <0>;
        };

        OE {
            bindings = <&kp RA(P)>;
            key-positions = <8 17>;
            timeout-ms = <25>;
            layers = <0>;
        };

        Ex {
            bindings = <&kp X>;
            key-positions = <10 11>;
            layers = <0>;
            timeout-ms = <25>;
        };

        Jay {
            bindings = <&kp J>;
            key-positions = <13 12>;
            timeout-ms = <25>;
            layers = <0>;
        };

        Vee {
            bindings = <&kp V>;
            key-positions = <11 12>;
            timeout-ms = <25>;
            layers = <0>;
        };

        Que {
            bindings = <&kp Q>;
            key-positions = <0 1>;
            timeout-ms = <25>;
            layers = <0>;
        };

        Zed {
            bindings = <&kp Z>;
            key-positions = <23 24>;
            timeout-ms = <25>;
            layers = <0>;
        };
    };

    behaviors {
        mt_hp: mt_hp {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HoldPreferred";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <150>;
        };

        mt_magic: mt_magic {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_MAGIC";
            bindings = <&kp>, <&magic>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <150>;
        };

        mt_arrowfy: mt_arrowfy {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_ARROW";
            bindings = <&arrowfy>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            flavor = "tap-preferred";
        };

        duo_layer: duo_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "DUO_LAYER";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
            flavor = "balanced";
        };

        magic: magic {
            compatible = "zmk,behavior-antecedent-morph";
            label = "MAGIC";
            #binding-cells = <0>;
            defaults = <&key_repeat>;
            bindings = <
                       &kp Z  &kp C  &kp H  &kp T  &kp J  &kp R  &kp T  &kp U  &kp E  &kp A  &kp V  &kp V  &kp I  &kp U  &kp T
            >;

            antecedents = <
                       T      S      P      M      B      W      X      E      U      O      R      D      Y      RA(Q)  RA(S)
            >;

            max-delay-ms = <500>;
        };

        mt_hmr_l: mt_hmr_l {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HMR_L";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            hold-trigger-key-positions = <15 5 6 7 17 16 26 27 28 29 18 8 9 19 30 31 32 33 34 35 36 37>;
            require-prior-idle-ms = <200>;
        };

        mt_hmr_r: mt_hmr_r {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_HMR_R";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            hold-trigger-key-positions = <20 21 10 0 1 11 22 23 12 2 3 24 13 4 14 25 32 33 34 35 36 37>;
            require-prior-idle-ms = <200>;
        };
    };

    macros {
        arrowfy: arrowfy {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&macro_param_1to1 &kp MACRO_PLACEHOLDER &kp GT>;
            label = "ARROWFY";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        Qu: Qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
            label = "QU";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        Ex: Ex {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp X>;
            label = "EX";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        Sch: Sch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp C &kp H>;
            label = "SCH";
            wait-ms = <30>;
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            bindings = <
        &kp W   &kp G  &kp D                     &kp F                 &kp B                     &trans       &kp L                     &kp U                     &kp O     &kp Y
        &kp R   &kp S  &mt_hmr_l LEFT_CONTROL T  &mt_hmr_l LEFT_ALT H  &kp K                     &trans       &mt_hmr_r LEFT_ALT N      &mt_hmr_r LEFT_CONTROL E  &kp A     &kp I
&trans  &trans  &kp C  &kp M                     &mt_hmr_l LEFT_GUI P  &trans                    &trans       &mt_hmr_r LEFT_GUI COMMA  &kp DOT                   &kp APOS  &trans  &trans
                       &trans                    &duo_layer 2 1        &mt_magic LEFT_SHIFT V    &lt 3 SPACE  &lt 4 BSPC                &trans
            >;
        };

        alpha-2 {
            bindings = <
        &trans  &kp AT  &trans    &trans  &trans    &trans     &trans  &trans  &kp SLASH  &kp QMARK
        &trans  &Sch    &kp EXCL  &trans  &trans    &trans     &Qu     &Ex     &kp SEMI   &kp COLON
&trans  &trans  &trans  &trans    &trans  &trans    &trans     &trans  &trans  &trans     &trans     &trans
                        &trans    &sl 1   &trans    &sk LSHFT  &trans  &trans
            >;
        };

        sym {
            bindings = <
        &mt CARET DOLLAR  &mt PRCNT HASH   &mt BSLH PIPE  &kp AMPS  &kp STAR    &kp UNDER  &kp N7    &kp N8    &kp N9    &mt_arrowfy EQUAL EQUAL
        &kp N0            &kp N3           &kp N2         &kp N1    &kp LBKT    &kp RBKT   &kp N4    &kp N5    &kp N6    &mt_arrowfy MINUS MINUS
&trans  &trans            &mt TILDE GRAVE  &kp LPAR       &kp RPAR  &trans      &trans     &kp RBRC  &kp LBRC  &kp PLUS  &trans                   &trans
                                           &trans         &trans    &trans      &trans     &trans    &trans
            >;
        };

        nav {
            bindings = <
        &trans   &trans   &trans            &trans             &trans       &trans     &kp HOME   &kp END   &trans  &kp DEL
        &kp ESC  &kp TAB  &kp LEFT_CONTROL  &mt_hp LALT ENTER  &kp PG_DN    &kp PG_UP  &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT
&trans  &trans   &trans   &trans            &kp LEFT_GUI       &trans       &trans     &kp K_APP  &trans    &trans  &trans     &trans
                          &trans            &trans             &trans       &trans     &trans     &trans
            >;
        };

        func {
            bindings = <
        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE           &trans           &trans    &trans  &trans           &kp PRINTSCREEN  &kp F11  &kp F12
        &kp F1        &kp F2        &mt LEFT_CONTROL F3  &mt LEFT_ALT F4  &trans    &trans  &mt LEFT_ALT F7  &mt LCTRL F8     &kp F9   &kp F10
&trans  &trans        &trans        &trans               &mt LGUI F5      &trans    &trans  &mt RGUI F6      &trans           &trans   &trans   &trans
                                    &trans               &trans           &trans    &trans  &trans           &trans
            >;
        };
    };
};
